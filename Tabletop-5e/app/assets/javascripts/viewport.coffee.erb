$ ->
  viewport = $('#viewport canvas').get(0)
  if (viewport)
    Viewport.initializeViewport()
    $(document).on 'ready page:change', Viewport.drawMap()
    Viewport.drawMap()
    Viewport.resizeCanvas()
    requestAnimationFrame(Viewport.drawMap)

class @Viewport
  
  # Tile Images
  @open_high
  @open_med
  @open_low
  @normal_high
  @normal_med
  @normal_low
  @difficult_high
  @difficult_med
  @difficult_low
  @blocked_high
  @blocked_med
  @blocked_low
  @token_high
  @token_med
  @token_low
  
  # Canvas context
  @ctx
  
  # Pre-render canvas
  @pre_ctx
  
  @zoom = 50
  @topOffset = 0
  @leftOffset = 0
  
  # UI Panel layouts
  
  @leftPanelLayout
  @rightPanelLayout
  
  
  @initializeViewport: ->
    @loadImages()
    @loadLayout()
    @loadEventHandlers()
    @ctx = $('#viewport canvas').get(0).getContext('2d')
    pre_canvas = document.createElement('canvas')
    @pre_ctx = pre_canvas.getContext('2d')
    
  @loadImages: ->
    @open_high = new Image()
    @open_med = new Image()
    @open_low = new Image()
    @normal_high = new Image()
    @normal_med = new Image()
    @normal_low = new Image()
    @difficult_high = new Image()
    @difficult_med = new Image()
    @difficult_low = new Image()
    @blocked_high = new Image()
    @blocked_med = new Image()
    @blocked_low = new Image()
    @token_high = new Image()
    @token_med = new Image()
    @token_low = new Image()
    @open_high.src = "<%= asset_path('open_high_rez.jpg') %>"
    @open_med.src = "<%= asset_path('open_med_rez.jpg') %>"
    @open_low.src = "<%= asset_path('open_low_rez.jpg') %>"
    @normal_high.src = "<%= asset_path('normal_high_rez.jpg') %>"
    @normal_med.src = "<%= asset_path('normal_med_rez.jpg') %>"
    @normal_low.src = "<%= asset_path('normal_low_rez.jpg') %>"
    @difficult_high.src = "<%= asset_path('difficult_high_rez.jpg') %>"
    @difficult_med.src = "<%= asset_path('difficult_med_rez.jpg') %>"
    @difficult_low.src = "<%= asset_path('difficult_low_rez.jpg') %>"
    @blocked_high.src = "<%= asset_path('blocked_high_rez.jpg') %>"
    @blocked_med.src = "<%= asset_path('blocked_med_rez.jpg') %>"
    @blocked_low.src = "<%= asset_path('blocked_low_rez.jpg') %>"
    @token_high.src = "<%= asset_path('token_high_rez.jpg') %>"
    @token_med.src = "<%= asset_path('token_med_rez.jpg') %>"
    @token_low.src = "<%= asset_path('token_low_rez.jpg') %>"
    
  @loadLayout: ->
    if !@leftPanelLayout     # Use Default Left Layout
      @loadDefaultLeftLayout()
    if !@rightPanelLayout    # Use Default Right Layout
      @loadDefaultRightLayout()
    $('#leftPanel').get(0).appendChild(@leftPanelLayout)
    $('#rightPanel').get(0).appendChild(@rightPanelLayout)
    
  @loadDefaultLeftLayout: ->
    div = document.createElement('div')
    
    draw = document.createElement('button')
    
    draw.appendChild(document.createTextNode('Draw'))
    
    draw.onclick = @drawMap
    
    div.appendChild(draw)
    
    @leftPanelLayout = div
    
  @loadDefaultRightLayout: ->
    div = document.createElement('div')
    
    zoomIn = document.createElement('button')
    zoomOut = document.createElement('button')
    panUp = document.createElement('button')
    panRight = document.createElement('button')
    panDown = document.createElement('button')
    panLeft = document.createElement('button')
    
    zoomIn.appendChild(document.createTextNode('+'))
    zoomOut.appendChild(document.createTextNode('-'))
    panUp.appendChild(document.createTextNode('Up'))
    panRight.appendChild(document.createTextNode('Right'))
    panDown.appendChild(document.createTextNode('Down'))
    panLeft.appendChild(document.createTextNode('Left'))
    
    zoomIn.onclick = @zoomIn
    zoomOut.onclick = @zoomOut
    panUp.onclick = @panUp
    panRight.onclick = @panRight
    panDown.onclick = @panDown
    panLeft.onclick = @panLeft
    
    div.appendChild(zoomIn)
    div.appendChild(zoomOut)
    div.appendChild(panUp)
    div.appendChild(panRight)
    div.appendChild(panDown)
    div.appendChild(panLeft)
    
    @rightPanelLayout = div
    
  @loadEventHandlers: ->
    canvas = $('#viewport canvas')
    canvas.on 'click', @clickHandler
    
  # Pre-render
  @drawMap: => 
    @pre_ctx.canvas.width = (gon.map.width) * @zoom
    @pre_ctx.canvas.height = (gon.map.length) * @zoom
    switch
      when @zoom < 25 
        open_tile = @open_low
        normal_tile = @normal_low
        difficult_tile = @difficult_low
        blocked_tile = @blocked_low
        token = @token_low
        inputSize = 10
      when @zoom < 75
        open_tile = @open_med
        normal_tile = @normal_med
        difficult_tile = @difficult_med
        blocked_tile = @blocked_med
        token = @token_med
        inputSize = 50
      else
        open_tile = @open_high
        normal_tile = @normal_high
        difficult_tile = @difficult_high
        blocked_tile = @blocked_high
        token = @token_high
        inputSize = 100
        
    for i in [0..gon.map.length - 1]
      for j in [0..gon.map.width - 1]
        switch gon.map.tiles[i][j].terrain
          when 'open'
            @pre_ctx.drawImage(open_tile, 0, 0, inputSize, inputSize, j * @zoom, i * @zoom, @zoom, @zoom)
          when 'normal'
            @pre_ctx.drawImage(normal_tile, 0, 0, inputSize, inputSize, j * @zoom, i * @zoom, @zoom, @zoom)
          when 'difficult'
            @pre_ctx.drawImage(difficult_tile, 0, 0, inputSize, inputSize, j * @zoom, i * @zoom, @zoom, @zoom)
          when 'blocked'
            @pre_ctx.drawImage(blocked_tile, 0, 0, inputSize, inputSize, j * @zoom, i * @zoom, @zoom, @zoom)
        if gon.map.tiles[i][j].token
          @pre_ctx.drawImage(@token, 0, 0, inputSize, inputSize, j * @zoom, i * @zoom, @zoom, @zoom)
    
    @render()
    
  @render: =>
    @ctx.drawImage(@pre_ctx.canvas, @leftOffset, @topOffset, @ctx.canvas.width, @ctx.canvas.height, 0, 0, @ctx.canvas.width, @ctx.canvas.height)
    
    @ctx.fillStyle="gray"
    # top border
    if @topOffset < 0
      @ctx.fillRect(0, 0, @ctx.canvas.width, -@topOffset)
      @ctx.stroke()
    # right border
    if @pre_ctx.canvas.width - @leftOffset < @ctx.canvas.width
      @ctx.fillRect(@pre_ctx.canvas.width - @leftOffset, 0, @ctx.canvas.width - (@pre_ctx.canvas.width - @leftOffset), @ctx.canvas.height)
      @ctx.stroke()
    # bottom border
    if @pre_ctx.canvas.height - @topOffset < @ctx.canvas.height
      @ctx.fillRect(0, @pre_ctx.canvas.height - @topOffset, @ctx.canvas.width, @ctx.canvas.height - (@pre_ctx.canvas.height - @topOffset))
      @ctx.stroke()
    # left border
    if @leftOffset < 0
      @ctx.fillRect(0, 0, -@leftOffset, @ctx.canvas.height)
      @ctx.stroke()
      
    requestAnimationFrame(@drawMap)
    
  
  # Event handlers
  
  @clickHandler: (e) ->
    offsetLeft = e.target.offsetLeft + e.target.offsetParent.offsetLeft - $(document).scrollLeft()
    offsetTop = e.target.offsetTop + e.target.offsetParent.offsetTop - $(document).scrollTop()
    x = e.clientX - offsetLeft
    y = e.clientY - offsetTop
    zoom = Viewport.zoom
    alert 'Coordinates: ' + (x // zoom) + ', ' + (y // zoom)
    
  @resizeCanvas: (e) ->
    Viewport.ctx.canvas.width = parseFloat($('#viewport').css('width')) * .7
    Viewport.render()
    
  @draw: (e) =>
    alert "draw"
    
  @zoomIn: (e) =>
    if @zoom < 100
      @zoom += 10
    
  @zoomOut: (e) =>
    if @zoom > 10
      @zoom -= 10
      
  @panUp: (e) =>
    if @topOffset >= 0
      @topOffset -= .5 * @zoom
      
  @panRight: (e) =>
    if @leftOffset <= @pre_ctx.canvas.width
      @leftOffset += .5 * @zoom
      
  @panDown: (e) =>
    if @topOffset <= @pre_ctx.canvas.height
      @topOffset += .5 * @zoom
      
  @panLeft: (e) =>
    if @leftOffset >= 0
      @leftOffset -= .5 * @zoom
  
  
  #  ctx.drawImage( image, 
  #                20, 20,     # Start at 20/20 pixels from the left and the top of the image (crop),
  #                1000, 800,  # "Get" a `1000 * 800` (w * h) area from the source image (crop),
  #                0, 0,       # Place the result at 0, 0 in the canvas,
  #                1000, 800); # With as width / height: 1000 * 800 (scale) 